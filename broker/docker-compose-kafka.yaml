version: '3.8'

services:
  # PostgreSQL for MonsterMQ session/retained storage
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: system
      POSTGRES_PASSWORD: manager
      POSTGRES_DB: monster
    networks:
      - monster-net

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - monster-net

  # Apache Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - monster-net

  # Kafka UI (optional, for monitoring)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - monster-net

  # MonsterMQ with Kafka integration
  monstermq:
    image: rocworks/monstermq:latest
    container_name: monstermq
    restart: unless-stopped
    depends_on:
      - postgres
      - kafka
    ports:
      - 1883:1883    # MQTT TCP
      - 8080:8080    # WebSocket
      - 3000:3000    # MCP Server
    volumes:
      - ./config-kafka.yaml:/app/config.yaml
      - ./log:/app/log
    command: ["-config", "config.yaml", "-log", "INFO"]
    networks:
      - monster-net

networks:
  monster-net:
    driver: bridge

# Usage:
# 1. Start all services:
#    docker-compose -f docker-compose-kafka.yaml up -d
#
# 2. Check Kafka UI:
#    http://localhost:8090
#
# 3. Connect MQTT client:
#    mqtt://localhost:1883
#
# 4. Monitor Kafka topics:
#    docker exec -it kafka kafka-console-consumer --topic sensors --from-beginning --bootstrap-server localhost:9092
#
# 5. View logs:
#    docker-compose -f docker-compose-kafka.yaml logs -f monstermq